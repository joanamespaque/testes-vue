{"remainingRequest":"/home/joana/pasta-teste/projeto-vue/func-project/node_modules/babel-loader/lib/index.js!/home/joana/pasta-teste/projeto-vue/func-project/node_modules/vuetify/lib/components/VCalendar/modes/column.js","dependencies":[{"path":"/home/joana/pasta-teste/projeto-vue/func-project/node_modules/vuetify/lib/components/VCalendar/modes/column.js","mtime":499162500000},{"path":"/home/joana/pasta-teste/projeto-vue/func-project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/joana/pasta-teste/projeto-vue/func-project/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS5pdGVyYWJsZSI7CmltcG9ydCB7IGdldE92ZXJsYXBHcm91cEhhbmRsZXIgfSBmcm9tICIuL2NvbW1vbiI7CnZhciBGVUxMX1dJRFRIID0gMTAwOwpleHBvcnQgdmFyIGNvbHVtbiA9IGZ1bmN0aW9uIGNvbHVtbihldmVudHMsIGZpcnN0V2Vla2RheSwgb3ZlcmxhcFRocmVzaG9sZCkgewogIHZhciBoYW5kbGVyID0gZ2V0T3ZlcmxhcEdyb3VwSGFuZGxlcihmaXJzdFdlZWtkYXkpOwogIHJldHVybiBmdW5jdGlvbiAoZGF5LCBkYXlFdmVudHMsIHRpbWVkKSB7CiAgICB2YXIgdmlzdWFscyA9IGhhbmRsZXIuZ2V0VmlzdWFscyhkYXksIGRheUV2ZW50cywgdGltZWQpOwoKICAgIGlmICh0aW1lZCkgewogICAgICB2aXN1YWxzLmZvckVhY2goZnVuY3Rpb24gKHZpc3VhbCkgewogICAgICAgIHZpc3VhbC5sZWZ0ID0gdmlzdWFsLmNvbHVtbiAqIEZVTExfV0lEVEggLyB2aXN1YWwuY29sdW1uQ291bnQ7CiAgICAgICAgdmlzdWFsLndpZHRoID0gRlVMTF9XSURUSCAvIHZpc3VhbC5jb2x1bW5Db3VudDsKICAgICAgfSk7CiAgICB9CgogICAgcmV0dXJuIHZpc3VhbHM7CiAgfTsKfTs="},{"version":3,"sources":["../../../../src/components/VCalendar/modes/column.ts"],"names":[],"mappings":";AACA,SAAA,sBAAA;AAEA,IAAM,UAAU,GAAhB,GAAA;AAEA,OAAO,IAAM,MAAM,GAA6B,SAAnC,MAAmC,CAAA,MAAA,EAAA,YAAA,EAAA,gBAAA,EAA2C;AACzF,MAAM,OAAO,GAAG,sBAAsB,CAAtC,YAAsC,CAAtC;AAEA,SAAO,UAAA,GAAA,EAAA,SAAA,EAAA,KAAA,EAA0B;AAC/B,QAAM,OAAO,GAAG,OAAO,CAAP,UAAA,CAAA,GAAA,EAAA,SAAA,EAAhB,KAAgB,CAAhB;;AAEA,QAAA,KAAA,EAAW;AACT,MAAA,OAAO,CAAP,OAAA,CAAgB,UAAA,MAAM,EAAG;AACvB,QAAA,MAAM,CAAN,IAAA,GAAc,MAAM,CAAN,MAAA,GAAA,UAAA,GAA6B,MAAM,CAAjD,WAAA;AACA,QAAA,MAAM,CAAN,KAAA,GAAe,UAAU,GAAG,MAAM,CAAlC,WAAA;AAFF,OAAA;AAID;;AAED,WAAA,OAAA;AAVF,GAAA;AAHK,CAAA","sourcesContent":["import { CalendarEventOverlapMode } from 'types'\nimport { getOverlapGroupHandler } from './common'\n\nconst FULL_WIDTH = 100\n\nexport const column: CalendarEventOverlapMode = (events, firstWeekday, overlapThreshold) => {\n  const handler = getOverlapGroupHandler(firstWeekday)\n\n  return (day, dayEvents, timed) => {\n    const visuals = handler.getVisuals(day, dayEvents, timed)\n\n    if (timed) {\n      visuals.forEach(visual => {\n        visual.left = visual.column * FULL_WIDTH / visual.columnCount\n        visual.width = FULL_WIDTH / visual.columnCount\n      })\n    }\n\n    return visuals\n  }\n}\n"],"sourceRoot":""}]}