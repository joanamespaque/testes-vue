{"remainingRequest":"/home/joana/projeto-vue/func-project/node_modules/babel-loader/lib/index.js!/home/joana/projeto-vue/func-project/node_modules/vuetify/lib/services/theme/index.js","dependencies":[{"path":"/home/joana/projeto-vue/func-project/node_modules/vuetify/lib/services/theme/index.js","mtime":499162500000},{"path":"/home/joana/projeto-vue/func-project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/joana/projeto-vue/func-project/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXM2LmFycmF5LmZpbmQiOwppbXBvcnQgX09iamVjdCRhc3NpZ24gZnJvbSAiL2hvbWUvam9hbmEvcHJvamV0by12dWUvZnVuYy1wcm9qZWN0L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS1jb3JlanMyL2NvcmUtanMvb2JqZWN0L2Fzc2lnbiI7CmltcG9ydCBfY2xhc3NDYWxsQ2hlY2sgZnJvbSAiL2hvbWUvam9hbmEvcHJvamV0by12dWUvZnVuYy1wcm9qZWN0L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS1jb3JlanMyL2hlbHBlcnMvZXNtL2NsYXNzQ2FsbENoZWNrIjsKaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tICIvaG9tZS9qb2FuYS9wcm9qZXRvLXZ1ZS9mdW5jLXByb2plY3Qvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lLWNvcmVqczIvaGVscGVycy9lc20vY3JlYXRlQ2xhc3MiOwppbXBvcnQgX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4gZnJvbSAiL2hvbWUvam9hbmEvcHJvamV0by12dWUvZnVuYy1wcm9qZWN0L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS1jb3JlanMyL2hlbHBlcnMvZXNtL3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4iOwppbXBvcnQgX2dldFByb3RvdHlwZU9mIGZyb20gIi9ob21lL2pvYW5hL3Byb2pldG8tdnVlL2Z1bmMtcHJvamVjdC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUtY29yZWpzMi9oZWxwZXJzL2VzbS9nZXRQcm90b3R5cGVPZiI7CmltcG9ydCBfaW5oZXJpdHMgZnJvbSAiL2hvbWUvam9hbmEvcHJvamV0by12dWUvZnVuYy1wcm9qZWN0L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS1jb3JlanMyL2hlbHBlcnMvZXNtL2luaGVyaXRzIjsKCi8qIGVzbGludC1kaXNhYmxlIG5vLW11bHRpLXNwYWNlcyAqLwovLyBFeHRlbnNpb25zCmltcG9ydCB7IFNlcnZpY2UgfSBmcm9tICcuLi9zZXJ2aWNlJzsgLy8gVXRpbGl0aWVzCgppbXBvcnQgKiBhcyBUaGVtZVV0aWxzIGZyb20gJy4vdXRpbHMnOyAvLyBUeXBlcwoKaW1wb3J0IFZ1ZSBmcm9tICd2dWUnOwpleHBvcnQgdmFyIFRoZW1lID0KLyojX19QVVJFX18qLwpmdW5jdGlvbiAoX1NlcnZpY2UpIHsKICBfaW5oZXJpdHMoVGhlbWUsIF9TZXJ2aWNlKTsKCiAgZnVuY3Rpb24gVGhlbWUocHJlc2V0KSB7CiAgICB2YXIgX3RoaXM7CgogICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFRoZW1lKTsKCiAgICBfdGhpcyA9IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIF9nZXRQcm90b3R5cGVPZihUaGVtZSkuY2FsbCh0aGlzKSk7CiAgICBfdGhpcy5kaXNhYmxlZCA9IGZhbHNlOwogICAgX3RoaXMuaXNEYXJrID0gbnVsbDsKICAgIF90aGlzLnZ1ZUluc3RhbmNlID0gbnVsbDsKICAgIF90aGlzLnZ1ZU1ldGEgPSBudWxsOwogICAgdmFyIF9wcmVzZXQkVGhlbWUkcHJvcGVydCA9IHByZXNldFtUaGVtZS5wcm9wZXJ0eV0sCiAgICAgICAgZGFyayA9IF9wcmVzZXQkVGhlbWUkcHJvcGVydC5kYXJrLAogICAgICAgIGRpc2FibGUgPSBfcHJlc2V0JFRoZW1lJHByb3BlcnQuZGlzYWJsZSwKICAgICAgICBvcHRpb25zID0gX3ByZXNldCRUaGVtZSRwcm9wZXJ0Lm9wdGlvbnMsCiAgICAgICAgdGhlbWVzID0gX3ByZXNldCRUaGVtZSRwcm9wZXJ0LnRoZW1lczsKICAgIF90aGlzLmRhcmsgPSBCb29sZWFuKGRhcmspOwogICAgX3RoaXMuZGVmYXVsdHMgPSBfdGhpcy50aGVtZXMgPSB0aGVtZXM7CiAgICBfdGhpcy5vcHRpb25zID0gb3B0aW9uczsKCiAgICBpZiAoZGlzYWJsZSkgewogICAgICBfdGhpcy5kaXNhYmxlZCA9IHRydWU7CiAgICAgIHJldHVybiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihfdGhpcyk7CiAgICB9CgogICAgX3RoaXMudGhlbWVzID0gewogICAgICBkYXJrOiBfdGhpcy5maWxsVmFyaWFudCh0aGVtZXMuZGFyaywgdHJ1ZSksCiAgICAgIGxpZ2h0OiBfdGhpcy5maWxsVmFyaWFudCh0aGVtZXMubGlnaHQsIGZhbHNlKQogICAgfTsKICAgIHJldHVybiBfdGhpczsKICB9IC8vIFdoZW4gc2V0dGluZyBjc3MsIGNoZWNrIGZvciBlbGVtZW50CiAgLy8gYW5kIGFwcGx5IG5ldyB2YWx1ZXMKCgogIF9jcmVhdGVDbGFzcyhUaGVtZSwgW3sKICAgIGtleTogImFwcGx5VGhlbWUiLAogICAgLy8gQXBwbHkgY3VycmVudCB0aGVtZSBkZWZhdWx0CiAgICAvLyBvbmx5IGNhbGxlZCBvbiBjbGllbnQgc2lkZQogICAgdmFsdWU6IGZ1bmN0aW9uIGFwcGx5VGhlbWUoKSB7CiAgICAgIGlmICh0aGlzLmRpc2FibGVkKSByZXR1cm4gdGhpcy5jbGVhckNzcygpOwogICAgICB0aGlzLmNzcyA9IHRoaXMuZ2VuZXJhdGVkU3R5bGVzOwogICAgfQogIH0sIHsKICAgIGtleTogImNsZWFyQ3NzIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBjbGVhckNzcygpIHsKICAgICAgdGhpcy5jc3MgPSAnJzsKICAgIH0gLy8gSW5pdGlhbGl6ZSB0aGVtZSBmb3IgU1NSIGFuZCBTUEEKICAgIC8vIEF0dGFjaCB0byBzc3JDb250ZXh0IGhlYWQgb3IKICAgIC8vIGFwcGx5IG5ldyB0aGVtZSB0byBkb2N1bWVudAoKICB9LCB7CiAgICBrZXk6ICJpbml0IiwKICAgIHZhbHVlOiBmdW5jdGlvbiBpbml0KHJvb3QsIHNzckNvbnRleHQpIHsKICAgICAgaWYgKHRoaXMuZGlzYWJsZWQpIHJldHVybjsKICAgICAgLyogaXN0YW5idWwgaWdub3JlIGVsc2UgKi8KCiAgICAgIGlmIChyb290LiRtZXRhKSB7CiAgICAgICAgdGhpcy5pbml0VnVlTWV0YShyb290KTsKICAgICAgfSBlbHNlIGlmIChzc3JDb250ZXh0KSB7CiAgICAgICAgdGhpcy5pbml0U1NSKHNzckNvbnRleHQpOwogICAgICB9CgogICAgICB0aGlzLmluaXRUaGVtZSgpOwogICAgfSAvLyBBbGxvd3MgZm9yIHlvdSB0byBzZXQgdGFyZ2V0IHRoZW1lCgogIH0sIHsKICAgIGtleTogInNldFRoZW1lIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBzZXRUaGVtZSh0aGVtZSwgdmFsdWUpIHsKICAgICAgdGhpcy50aGVtZXNbdGhlbWVdID0gX09iamVjdCRhc3NpZ24odGhpcy50aGVtZXNbdGhlbWVdLCB2YWx1ZSk7CiAgICAgIHRoaXMuYXBwbHlUaGVtZSgpOwogICAgfSAvLyBSZXNldCB0aGVtZSBkZWZhdWx0cwoKICB9LCB7CiAgICBrZXk6ICJyZXNldFRoZW1lcyIsCiAgICB2YWx1ZTogZnVuY3Rpb24gcmVzZXRUaGVtZXMoKSB7CiAgICAgIHRoaXMudGhlbWVzLmxpZ2h0ID0gX09iamVjdCRhc3NpZ24oe30sIHRoaXMuZGVmYXVsdHMubGlnaHQpOwogICAgICB0aGlzLnRoZW1lcy5kYXJrID0gX09iamVjdCRhc3NpZ24oe30sIHRoaXMuZGVmYXVsdHMuZGFyayk7CiAgICAgIHRoaXMuYXBwbHlUaGVtZSgpOwogICAgfSAvLyBDaGVjayBmb3IgZXhpc3RlbmNlIG9mIHN0eWxlIGVsZW1lbnQKCiAgfSwgewogICAga2V5OiAiY2hlY2tPckNyZWF0ZVN0eWxlRWxlbWVudCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gY2hlY2tPckNyZWF0ZVN0eWxlRWxlbWVudCgpIHsKICAgICAgdGhpcy5zdHlsZUVsID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Z1ZXRpZnktdGhlbWUtc3R5bGVzaGVldCcpOwogICAgICAvKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqLwoKICAgICAgaWYgKHRoaXMuc3R5bGVFbCkgcmV0dXJuIHRydWU7CiAgICAgIHRoaXMuZ2VuU3R5bGVFbGVtZW50KCk7IC8vIElmIGRvZXNuJ3QgaGF2ZSBpdCwgY3JlYXRlIGl0CgogICAgICByZXR1cm4gQm9vbGVhbih0aGlzLnN0eWxlRWwpOwogICAgfQogIH0sIHsKICAgIGtleTogImZpbGxWYXJpYW50IiwKICAgIHZhbHVlOiBmdW5jdGlvbiBmaWxsVmFyaWFudCgpIHsKICAgICAgdmFyIHRoZW1lID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiB7fTsKICAgICAgdmFyIGRhcmsgPSBhcmd1bWVudHMubGVuZ3RoID4gMSA/IGFyZ3VtZW50c1sxXSA6IHVuZGVmaW5lZDsKICAgICAgdmFyIGRlZmF1bHRUaGVtZSA9IHRoaXMudGhlbWVzW2RhcmsgPyAnZGFyaycgOiAnbGlnaHQnXTsKICAgICAgcmV0dXJuIF9PYmplY3QkYXNzaWduKHt9LCBkZWZhdWx0VGhlbWUsIHRoZW1lKTsKICAgIH0gLy8gR2VuZXJhdGUgdGhlIHN0eWxlIGVsZW1lbnQKICAgIC8vIGlmIGFwcGxpY2FibGUKCiAgfSwgewogICAga2V5OiAiZ2VuU3R5bGVFbGVtZW50IiwKICAgIHZhbHVlOiBmdW5jdGlvbiBnZW5TdHlsZUVsZW1lbnQoKSB7CiAgICAgIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAqLwogICAgICBpZiAodHlwZW9mIGRvY3VtZW50ID09PSAndW5kZWZpbmVkJykgcmV0dXJuOwogICAgICAvKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqLwoKICAgICAgdmFyIG9wdGlvbnMgPSB0aGlzLm9wdGlvbnMgfHwge307CiAgICAgIHRoaXMuc3R5bGVFbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3N0eWxlJyk7CiAgICAgIHRoaXMuc3R5bGVFbC50eXBlID0gJ3RleHQvY3NzJzsKICAgICAgdGhpcy5zdHlsZUVsLmlkID0gJ3Z1ZXRpZnktdGhlbWUtc3R5bGVzaGVldCc7CgogICAgICBpZiAob3B0aW9ucy5jc3BOb25jZSkgewogICAgICAgIHRoaXMuc3R5bGVFbC5zZXRBdHRyaWJ1dGUoJ25vbmNlJywgb3B0aW9ucy5jc3BOb25jZSk7CiAgICAgIH0KCiAgICAgIGRvY3VtZW50LmhlYWQuYXBwZW5kQ2hpbGQodGhpcy5zdHlsZUVsKTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJpbml0VnVlTWV0YSIsCiAgICB2YWx1ZTogZnVuY3Rpb24gaW5pdFZ1ZU1ldGEocm9vdCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHRoaXMudnVlTWV0YSA9IHJvb3QuJG1ldGEoKTsKCiAgICAgIGlmICh0aGlzLmlzVnVlTWV0YTIzKSB7CiAgICAgICAgLy8gdnVlLW1ldGEgbmVlZHMgdG8gYXBwbHkgYWZ0ZXIgbW91bnRlZCgpCiAgICAgICAgcm9vdC4kbmV4dFRpY2soZnVuY3Rpb24gKCkgewogICAgICAgICAgX3RoaXMyLmFwcGx5VnVlTWV0YTIzKCk7CiAgICAgICAgfSk7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICB2YXIgbWV0YUtleU5hbWUgPSB0eXBlb2YgdGhpcy52dWVNZXRhLmdldE9wdGlvbnMgPT09ICdmdW5jdGlvbicgPyB0aGlzLnZ1ZU1ldGEuZ2V0T3B0aW9ucygpLmtleU5hbWUgOiAnbWV0YUluZm8nOwogICAgICB2YXIgbWV0YUluZm8gPSByb290LiRvcHRpb25zW21ldGFLZXlOYW1lXSB8fCB7fTsKCiAgICAgIHJvb3QuJG9wdGlvbnNbbWV0YUtleU5hbWVdID0gZnVuY3Rpb24gKCkgewogICAgICAgIG1ldGFJbmZvLnN0eWxlID0gbWV0YUluZm8uc3R5bGUgfHwgW107CiAgICAgICAgdmFyIHZ1ZXRpZnlTdHlsZXNoZWV0ID0gbWV0YUluZm8uc3R5bGUuZmluZChmdW5jdGlvbiAocykgewogICAgICAgICAgcmV0dXJuIHMuaWQgPT09ICd2dWV0aWZ5LXRoZW1lLXN0eWxlc2hlZXQnOwogICAgICAgIH0pOwoKICAgICAgICBpZiAoIXZ1ZXRpZnlTdHlsZXNoZWV0KSB7CiAgICAgICAgICBtZXRhSW5mby5zdHlsZS5wdXNoKHsKICAgICAgICAgICAgY3NzVGV4dDogX3RoaXMyLmdlbmVyYXRlZFN0eWxlcywKICAgICAgICAgICAgdHlwZTogJ3RleHQvY3NzJywKICAgICAgICAgICAgaWQ6ICd2dWV0aWZ5LXRoZW1lLXN0eWxlc2hlZXQnLAogICAgICAgICAgICBub25jZTogKF90aGlzMi5vcHRpb25zIHx8IHt9KS5jc3BOb25jZQogICAgICAgICAgfSk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHZ1ZXRpZnlTdHlsZXNoZWV0LmNzc1RleHQgPSBfdGhpczIuZ2VuZXJhdGVkU3R5bGVzOwogICAgICAgIH0KCiAgICAgICAgcmV0dXJuIG1ldGFJbmZvOwogICAgICB9OwogICAgfQogIH0sIHsKICAgIGtleTogImFwcGx5VnVlTWV0YTIzIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBhcHBseVZ1ZU1ldGEyMygpIHsKICAgICAgdmFyIF90aGlzJHZ1ZU1ldGEkYWRkQXBwID0gdGhpcy52dWVNZXRhLmFkZEFwcCgndnVldGlmeScpLAogICAgICAgICAgc2V0ID0gX3RoaXMkdnVlTWV0YSRhZGRBcHAuc2V0OwoKICAgICAgc2V0KHsKICAgICAgICBzdHlsZTogW3sKICAgICAgICAgIGNzc1RleHQ6IHRoaXMuZ2VuZXJhdGVkU3R5bGVzLAogICAgICAgICAgdHlwZTogJ3RleHQvY3NzJywKICAgICAgICAgIGlkOiAndnVldGlmeS10aGVtZS1zdHlsZXNoZWV0JywKICAgICAgICAgIG5vbmNlOiAodGhpcy5vcHRpb25zIHx8IHt9KS5jc3BOb25jZQogICAgICAgIH1dCiAgICAgIH0pOwogICAgfQogIH0sIHsKICAgIGtleTogImluaXRTU1IiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGluaXRTU1Ioc3NyQ29udGV4dCkgewogICAgICB2YXIgb3B0aW9ucyA9IHRoaXMub3B0aW9ucyB8fCB7fTsgLy8gU1NSCgogICAgICB2YXIgbm9uY2UgPSBvcHRpb25zLmNzcE5vbmNlID8gIiBub25jZT1cIiIuY29uY2F0KG9wdGlvbnMuY3NwTm9uY2UsICJcIiIpIDogJyc7CiAgICAgIHNzckNvbnRleHQuaGVhZCA9IHNzckNvbnRleHQuaGVhZCB8fCAnJzsKICAgICAgc3NyQ29udGV4dC5oZWFkICs9ICI8c3R5bGUgdHlwZT1cInRleHQvY3NzXCIgaWQ9XCJ2dWV0aWZ5LXRoZW1lLXN0eWxlc2hlZXRcIiIuY29uY2F0KG5vbmNlLCAiPiIpLmNvbmNhdCh0aGlzLmdlbmVyYXRlZFN0eWxlcywgIjwvc3R5bGU+Iik7CiAgICB9CiAgfSwgewogICAga2V5OiAiaW5pdFRoZW1lIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBpbml0VGhlbWUoKSB7CiAgICAgIHZhciBfdGhpczMgPSB0aGlzOwoKICAgICAgLy8gT25seSB3YXRjaCBmb3IgcmVhY3Rpdml0eSBvbiBjbGllbnQgc2lkZQogICAgICBpZiAodHlwZW9mIGRvY3VtZW50ID09PSAndW5kZWZpbmVkJykgcmV0dXJuOyAvLyBJZiB3ZSBnZXQgaGVyZSBzb21laG93LCBlbnN1cmUKICAgICAgLy8gZXhpc3RpbmcgaW5zdGFuY2UgaXMgcmVtb3ZlZAoKICAgICAgaWYgKHRoaXMudnVlSW5zdGFuY2UpIHRoaXMudnVlSW5zdGFuY2UuJGRlc3Ryb3koKTsgLy8gVXNlIFZ1ZSBpbnN0YW5jZSB0byB0cmFjayByZWFjdGl2aXR5CiAgICAgIC8vIFRPRE86IFVwZGF0ZSB0byB1c2UgUkZDIGlmIG1lcmdlZAogICAgICAvLyBodHRwczovL2dpdGh1Yi5jb20vdnVlanMvcmZjcy9ibG9iL2FkdmFuY2VkLXJlYWN0aXZpdHktYXBpL2FjdGl2ZS1yZmNzLzAwMDAtYWR2YW5jZWQtcmVhY3Rpdml0eS1hcGkubWQKCiAgICAgIHRoaXMudnVlSW5zdGFuY2UgPSBuZXcgVnVlKHsKICAgICAgICBkYXRhOiB7CiAgICAgICAgICB0aGVtZXM6IHRoaXMudGhlbWVzCiAgICAgICAgfSwKICAgICAgICB3YXRjaDogewogICAgICAgICAgdGhlbWVzOiB7CiAgICAgICAgICAgIGltbWVkaWF0ZTogdHJ1ZSwKICAgICAgICAgICAgZGVlcDogdHJ1ZSwKICAgICAgICAgICAgaGFuZGxlcjogZnVuY3Rpb24gaGFuZGxlcigpIHsKICAgICAgICAgICAgICByZXR1cm4gX3RoaXMzLmFwcGx5VGhlbWUoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSk7CiAgICB9CiAgfSwgewogICAga2V5OiAiY3NzIiwKICAgIHNldDogZnVuY3Rpb24gc2V0KHZhbCkgewogICAgICBpZiAodGhpcy52dWVNZXRhKSB7CiAgICAgICAgaWYgKHRoaXMuaXNWdWVNZXRhMjMpIHsKICAgICAgICAgIHRoaXMuYXBwbHlWdWVNZXRhMjMoKTsKICAgICAgICB9CgogICAgICAgIHJldHVybjsKICAgICAgfQoKICAgICAgdGhpcy5jaGVja09yQ3JlYXRlU3R5bGVFbGVtZW50KCkgJiYgKHRoaXMuc3R5bGVFbC5pbm5lckhUTUwgPSB2YWwpOwogICAgfQogIH0sIHsKICAgIGtleTogImRhcmsiLAogICAgc2V0OiBmdW5jdGlvbiBzZXQodmFsKSB7CiAgICAgIHZhciBvbGREYXJrID0gdGhpcy5pc0Rhcms7CiAgICAgIHRoaXMuaXNEYXJrID0gdmFsOyAvLyBPbmx5IGFwcGx5IHRoZW1lIGFmdGVyIGRhcmsKICAgICAgLy8gaGFzIGFscmVhZHkgYmVlbiBzZXQgYmVmb3JlCgogICAgICBvbGREYXJrICE9IG51bGwgJiYgdGhpcy5hcHBseVRoZW1lKCk7CiAgICB9LAogICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7CiAgICAgIHJldHVybiBCb29sZWFuKHRoaXMuaXNEYXJrKTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJjdXJyZW50VGhlbWUiLAogICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7CiAgICAgIHZhciB0YXJnZXQgPSB0aGlzLmRhcmsgPyAnZGFyaycgOiAnbGlnaHQnOwogICAgICByZXR1cm4gdGhpcy50aGVtZXNbdGFyZ2V0XTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJnZW5lcmF0ZWRTdHlsZXMiLAogICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7CiAgICAgIHZhciB0aGVtZSA9IHRoaXMucGFyc2VkVGhlbWU7CiAgICAgIC8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovCgogICAgICB2YXIgb3B0aW9ucyA9IHRoaXMub3B0aW9ucyB8fCB7fTsKICAgICAgdmFyIGNzczsKCiAgICAgIGlmIChvcHRpb25zLnRoZW1lQ2FjaGUgIT0gbnVsbCkgewogICAgICAgIGNzcyA9IG9wdGlvbnMudGhlbWVDYWNoZS5nZXQodGhlbWUpOwogICAgICAgIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAqLwoKICAgICAgICBpZiAoY3NzICE9IG51bGwpIHJldHVybiBjc3M7CiAgICAgIH0KCiAgICAgIGNzcyA9IFRoZW1lVXRpbHMuZ2VuU3R5bGVzKHRoZW1lLCBvcHRpb25zLmN1c3RvbVByb3BlcnRpZXMpOwoKICAgICAgaWYgKG9wdGlvbnMubWluaWZ5VGhlbWUgIT0gbnVsbCkgewogICAgICAgIGNzcyA9IG9wdGlvbnMubWluaWZ5VGhlbWUoY3NzKTsKICAgICAgfQoKICAgICAgaWYgKG9wdGlvbnMudGhlbWVDYWNoZSAhPSBudWxsKSB7CiAgICAgICAgb3B0aW9ucy50aGVtZUNhY2hlLnNldCh0aGVtZSwgY3NzKTsKICAgICAgfQoKICAgICAgcmV0dXJuIGNzczsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJwYXJzZWRUaGVtZSIsCiAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHsKICAgICAgLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi8KICAgICAgdmFyIHRoZW1lID0gdGhpcy5jdXJyZW50VGhlbWUgfHwge307CiAgICAgIHJldHVybiBUaGVtZVV0aWxzLnBhcnNlKHRoZW1lKTsKICAgIH0gLy8gSXMgdXNpbmcgdjIuMyBvZiB2dWUtbWV0YQogICAgLy8gaHR0cHM6Ly9naXRodWIuY29tL251eHQvdnVlLW1ldGEvcmVsZWFzZXMvdGFnL3YyLjMuMAoKICB9LCB7CiAgICBrZXk6ICJpc1Z1ZU1ldGEyMyIsCiAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHsKICAgICAgcmV0dXJuIHR5cGVvZiB0aGlzLnZ1ZU1ldGEuYWRkQXBwID09PSAnZnVuY3Rpb24nOwogICAgfQogIH1dKTsKCiAgcmV0dXJuIFRoZW1lOwp9KFNlcnZpY2UpOwpUaGVtZS5wcm9wZXJ0eSA9ICd0aGVtZSc7"},{"version":3,"sources":["../../../src/services/theme/index.ts"],"names":[],"mappings":";;;;;;;;AAAA;AACA;AACA,SAAA,OAAA,QAAA,YAAA,C,CAEA;;AACA,OAAO,KAAP,UAAA,MAAA,SAAA,C,CAEA;;AACA,OAAA,GAAA,MAAA,KAAA;AASA,WAAM,KAAN;AAAA;AAAA;AAAA;;AAmBE,iBAAA,MAAA,EAAkC;AAAA;;AAAA;;AAChC;AAjBK,UAAA,QAAA,GAAA,KAAA;AAUC,UAAA,MAAA,GAAA,IAAA;AAEA,UAAA,WAAA,GAAA,IAAA;AAEA,UAAA,OAAA,GAAA,IAAA;AAE0B,gCAQ5B,MAAM,CAAC,KAAK,CALhB,QAKU,CARsB;AAAA,QAG1B,IAH0B,yBAG1B,IAH0B;AAAA,QAG1B,OAH0B,yBAG1B,OAH0B;AAAA,QAG1B,OAH0B,yBAG1B,OAH0B;AAAA,QAO9B,MAP8B,yBAO9B,MAP8B;AAUhC,UAAA,IAAA,GAAY,OAAO,CAAnB,IAAmB,CAAnB;AACA,UAAA,QAAA,GAAgB,MAAA,MAAA,GAAhB,MAAA;AACA,UAAA,OAAA,GAAA,OAAA;;AAEA,QAAA,OAAA,EAAa;AACX,YAAA,QAAA,GAAA,IAAA;AAEA;AACD;;AAED,UAAA,MAAA,GAAc;AACZ,MAAA,IAAI,EAAE,MAAA,WAAA,CAAiB,MAAM,CAAvB,IAAA,EADM,IACN,CADM;AAEZ,MAAA,KAAK,EAAE,MAAA,WAAA,CAAiB,MAAM,CAAvB,KAAA,EAAA,KAAA;AAFK,KAAd;AApBgC;AAnBF,GAAlC,CA6CE;AACA;;;AA9CF;AAAA;AAsEE;AACA;AAvEF,iCAwEmB;AACf,UAAI,KAAJ,QAAA,EAAmB,OAAO,KAAP,QAAO,EAAP;AAEnB,WAAA,GAAA,GAAW,KAAX,eAAA;AACD;AA5EH;AAAA;AAAA,+BA8EiB;AACb,WAAA,GAAA,GAAA,EAAA;AA/E8B,KAAlC,CAkFE;AACA;AACA;;AApFF;AAAA;AAAA,yBAqFa,IArFb,EAqFa,UArFb,EAqF0C;AACtC,UAAI,KAAJ,QAAA,EAAmB;AAEnB;;AACA,UAAK,IAAY,CAAjB,KAAA,EAAyB;AACvB,aAAA,WAAA,CAAA,IAAA;AADF,OAAA,MAEO,IAAA,UAAA,EAAgB;AACrB,aAAA,OAAA,CAAA,UAAA;AACD;;AAED,WAAA,SAAA;AA/F8B,KAAlC,CAkGE;;AAlGF;AAAA;AAAA,6BAmGiB,KAnGjB,EAmGiB,KAnGjB,EAmGyD;AACrD,WAAA,MAAA,CAAA,KAAA,IAAqB,eAAc,KAAA,MAAA,CAAd,KAAc,CAAd,EAArB,KAAqB,CAArB;AACA,WAAA,UAAA;AArG8B,KAAlC,CAwGE;;AAxGF;AAAA;AAAA,kCAyGoB;AAChB,WAAA,MAAA,CAAA,KAAA,GAAoB,eAAA,EAAA,EAAkB,KAAA,QAAA,CAAtC,KAAoB,CAApB;AACA,WAAA,MAAA,CAAA,IAAA,GAAmB,eAAA,EAAA,EAAkB,KAAA,QAAA,CAArC,IAAmB,CAAnB;AACA,WAAA,UAAA;AA5G8B,KAAlC,CA+GE;;AA/GF;AAAA;AAAA,gDAgHmC;AAC/B,WAAA,OAAA,GAAe,QAAQ,CAAR,cAAA,CAAf,0BAAe,CAAf;AAEA;;AACA,UAAI,KAAJ,OAAA,EAAkB,OAAA,IAAA;AAElB,WAN+B,eAM/B,GAN+B,CAMR;;AAEvB,aAAO,OAAO,CAAC,KAAf,OAAc,CAAd;AACD;AAzHH;AAAA;AAAA,kCA6HiB;AAAA,UADb,KACa,uEAFI,EAEJ;AAAA,UAFI,IAEJ;AAEb,UAAM,YAAY,GAAG,KAAA,MAAA,CAAY,IAAI,GAAA,MAAA,GAArC,OAAqB,CAArB;AAEA,aAAO,eAAA,EAAA,EAAA,YAAA,EAAP,KAAO,CAAP;AAjI8B,KAAlC,CAuIE;AACA;;AAxIF;AAAA;AAAA,sCAyIyB;AACrB;AACA,UAAI,OAAA,QAAA,KAAJ,WAAA,EAAqC;AAErC;;AACA,UAAM,OAAO,GAAG,KAAA,OAAA,IAAhB,EAAA;AAEA,WAAA,OAAA,GAAe,QAAQ,CAAR,aAAA,CAAf,OAAe,CAAf;AACA,WAAA,OAAA,CAAA,IAAA,GAAA,UAAA;AACA,WAAA,OAAA,CAAA,EAAA,GAAA,0BAAA;;AAEA,UAAI,OAAO,CAAX,QAAA,EAAsB;AACpB,aAAA,OAAA,CAAA,YAAA,CAAA,OAAA,EAAmC,OAAO,CAA1C,QAAA;AACD;;AAED,MAAA,QAAQ,CAAR,IAAA,CAAA,WAAA,CAA0B,KAA1B,OAAA;AACD;AAzJH;AAAA;AAAA,gCA2JqB,IA3JrB,EA2JgC;AAAA;;AAC5B,WAAA,OAAA,GAAe,IAAI,CAAnB,KAAe,EAAf;;AACA,UAAI,KAAJ,WAAA,EAAsB;AACpB;AACA,QAAA,IAAI,CAAJ,SAAA,CAAe,YAAK;AAClB,UAAA,MAAA,CAAA,cAAA;AADF,SAAA;AAGA;AACD;;AAED,UAAM,WAAW,GAAG,OAAO,KAAA,OAAA,CAAP,UAAA,KAAA,UAAA,GAAgD,KAAA,OAAA,CAAA,UAAA,GAAhD,OAAA,GAApB,UAAA;AACA,UAAM,QAAQ,GAAG,IAAI,CAAJ,QAAA,CAAA,WAAA,KAAjB,EAAA;;AAEA,MAAA,IAAI,CAAJ,QAAA,CAAA,WAAA,IAA6B,YAAK;AAChC,QAAA,QAAQ,CAAR,KAAA,GAAiB,QAAQ,CAAR,KAAA,IAAjB,EAAA;AAEA,YAAM,iBAAiB,GAAG,QAAQ,CAAR,KAAA,CAAA,IAAA,CAAqB,UAAA,CAAD;AAAA,iBAAY,CAAC,CAAD,EAAA,KAA1D,0BAA8C;AAAA,SAApB,CAA1B;;AAEA,YAAI,CAAJ,iBAAA,EAAwB;AACtB,UAAA,QAAQ,CAAR,KAAA,CAAA,IAAA,CAAoB;AAClB,YAAA,OAAO,EAAE,MAAA,CADS,eAAA;AAElB,YAAA,IAAI,EAFc,UAAA;AAGlB,YAAA,EAAE,EAHgB,0BAAA;AAIlB,YAAA,KAAK,EAAE,CAAC,MAAA,CAAA,OAAA,IAAD,EAAA,EAAqB;AAJV,WAApB;AADF,SAAA,MAOO;AACL,UAAA,iBAAiB,CAAjB,OAAA,GAA4B,MAAA,CAA5B,eAAA;AACD;;AAED,eAAA,QAAA;AAhBF,OAAA;AAkBD;AA1LH;AAAA;AAAA,qCA4LwB;AAAA,iCACJ,KAAA,OAAA,CAAA,MAAA,CAAhB,SAAgB,CADI;AAAA,UACZ,GADY,wBACZ,GADY;;AAGpB,MAAA,GAAG,CAAC;AACF,QAAA,KAAK,EAAE,CAAC;AACN,UAAA,OAAO,EAAE,KADH,eAAA;AAEN,UAAA,IAAI,EAFE,UAAA;AAGN,UAAA,EAAE,EAHI,0BAAA;AAIN,UAAA,KAAK,EAAE,CAAC,KAAA,OAAA,IAAD,EAAA,EAAqB;AAJtB,SAAD;AADL,OAAD,CAAH;AAQD;AAvMH;AAAA;AAAA,4BAyMiB,UAzMjB,EAyMmC;AAC/B,UAAM,OAAO,GAAG,KAAA,OAAA,IADe,EAC/B,CAD+B,CAE/B;;AACA,UAAM,KAAK,GAAG,OAAO,CAAP,QAAA,sBAA8B,OAAO,CAArC,QAAA,UAAd,EAAA;AACA,MAAA,UAAU,CAAV,IAAA,GAAkB,UAAU,CAAV,IAAA,IAAlB,EAAA;AACA,MAAA,UAAU,CAAV,IAAA,sEAA0E,KAA1E,cAAmF,KAAnF,eAAA;AACD;AA/MH;AAAA;AAAA,gCAiNmB;AAAA;;AACf;AACA,UAAI,OAAA,QAAA,KAAJ,WAAA,EAFe,OAAA,CAIf;AACA;;AACA,UAAI,KAAJ,WAAA,EAAsB,KAAA,WAAA,CANP,QAMO,GANP,CAQf;AACA;AACA;;AACA,WAAA,WAAA,GAAmB,IAAA,GAAA,CAAQ;AACzB,QAAA,IAAI,EAAE;AAAE,UAAA,MAAM,EAAE,KAAK;AAAf,SADmB;AAGzB,QAAA,KAAK,EAAE;AACL,UAAA,MAAM,EAAE;AACN,YAAA,SAAS,EADH,IAAA;AAEN,YAAA,IAAI,EAFE,IAAA;AAGN,YAAA,OAAO,EAAE;AAAA,qBAAM,MAAA,CAAA,UAAA,EAAN;AAAA;AAHH;AADH;AAHkB,OAAR,CAAnB;AAWD;AAvOH;AAAA;AAAA,sBA+CE,GA/CF,EA+CsB;AAClB,UAAI,KAAJ,OAAA,EAAkB;AAChB,YAAI,KAAJ,WAAA,EAAsB;AACpB,eAAA,cAAA;AACD;;AACD;AACD;;AACD,WAAA,yBAAA,OAAqC,KAAA,OAAA,CAAA,SAAA,GAArC,GAAA;AACD;AAvDH;AAAA;AAAA,sBAyDE,GAzDF,EAyDwB;AACpB,UAAM,OAAO,GAAG,KAAhB,MAAA;AAEA,WAAA,MAAA,GAHoB,GAGpB,CAHoB,CAIpB;AACA;;AACA,MAAA,OAAO,IAAP,IAAA,IAAmB,KAAnB,UAAmB,EAAnB;AACD,KAhEH;AAAA,wBAkEU;AACN,aAAO,OAAO,CAAC,KAAf,MAAc,CAAd;AAnE8B;AAAlC;AAAA;AAAA,wBAyOkB;AACd,UAAM,MAAM,GAAG,KAAA,IAAA,GAAA,MAAA,GAAf,OAAA;AAEA,aAAO,KAAA,MAAA,CAAP,MAAO,CAAP;AACD;AA7OH;AAAA;AAAA,wBA+OqB;AACjB,UAAM,KAAK,GAAG,KAAd,WAAA;AACA;;AACA,UAAM,OAAO,GAAG,KAAA,OAAA,IAAhB,EAAA;AACA,UAAA,GAAA;;AAEA,UAAI,OAAO,CAAP,UAAA,IAAJ,IAAA,EAAgC;AAC9B,QAAA,GAAG,GAAG,OAAO,CAAP,UAAA,CAAA,GAAA,CAAN,KAAM,CAAN;AACA;;AACA,YAAI,GAAG,IAAP,IAAA,EAAiB,OAAA,GAAA;AAClB;;AAED,MAAA,GAAG,GAAG,UAAU,CAAV,SAAA,CAAA,KAAA,EAA4B,OAAO,CAAzC,gBAAM,CAAN;;AAEA,UAAI,OAAO,CAAP,WAAA,IAAJ,IAAA,EAAiC;AAC/B,QAAA,GAAG,GAAG,OAAO,CAAP,WAAA,CAAN,GAAM,CAAN;AACD;;AAED,UAAI,OAAO,CAAP,UAAA,IAAJ,IAAA,EAAgC;AAC9B,QAAA,OAAO,CAAP,UAAA,CAAA,GAAA,CAAA,KAAA,EAAA,GAAA;AACD;;AAED,aAAA,GAAA;AACD;AAtQH;AAAA;AAAA,wBAwQiB;AACb;AACA,UAAM,KAAK,GAAG,KAAA,YAAA,IAAd,EAAA;AACA,aAAO,UAAU,CAAV,KAAA,CAAP,KAAO,CAAP;AA3Q8B,KAAlC,CA8QE;AACA;;AA/QF;AAAA;AAAA,wBAgRyB;AACrB,aAAO,OAAO,KAAA,OAAA,CAAP,MAAA,KAAP,UAAA;AACD;AAlRH;;AAAA;AAAA,EAAM,OAAN;AACS,KAAA,CAAA,QAAA,GAAA,OAAA","sourcesContent":["/* eslint-disable no-multi-spaces */\n// Extensions\nimport { Service } from '../service'\n\n// Utilities\nimport * as ThemeUtils from './utils'\n\n// Types\nimport Vue from 'vue'\nimport { VuetifyPreset } from 'vuetify/types/services/presets'\nimport {\n  VuetifyParsedTheme,\n  VuetifyThemes,\n  VuetifyThemeVariant,\n  Theme as ITheme,\n} from 'vuetify/types/services/theme'\n\nexport class Theme extends Service {\n  static property: 'theme' = 'theme'\n\n  public disabled = false\n\n  public options: ITheme['options']\n\n  public styleEl?: HTMLStyleElement\n\n  public themes: VuetifyThemes\n\n  public defaults: VuetifyThemes\n\n  private isDark = null as boolean | null\n\n  private vueInstance = null as Vue | null\n\n  private vueMeta = null as any | null\n\n  constructor (preset: VuetifyPreset) {\n    super()\n\n    const {\n      dark,\n      disable,\n      options,\n      themes,\n    } = preset[Theme.property]\n\n    this.dark = Boolean(dark)\n    this.defaults = this.themes = themes\n    this.options = options\n\n    if (disable) {\n      this.disabled = true\n\n      return\n    }\n\n    this.themes = {\n      dark: this.fillVariant(themes.dark, true),\n      light: this.fillVariant(themes.light, false),\n    }\n  }\n\n  // When setting css, check for element\n  // and apply new values\n  set css (val: string) {\n    if (this.vueMeta) {\n      if (this.isVueMeta23) {\n        this.applyVueMeta23()\n      }\n      return\n    }\n    this.checkOrCreateStyleElement() && (this.styleEl!.innerHTML = val)\n  }\n\n  set dark (val: boolean) {\n    const oldDark = this.isDark\n\n    this.isDark = val\n    // Only apply theme after dark\n    // has already been set before\n    oldDark != null && this.applyTheme()\n  }\n\n  get dark () {\n    return Boolean(this.isDark)\n  }\n\n  // Apply current theme default\n  // only called on client side\n  public applyTheme (): void {\n    if (this.disabled) return this.clearCss()\n\n    this.css = this.generatedStyles\n  }\n\n  public clearCss (): void {\n    this.css = ''\n  }\n\n  // Initialize theme for SSR and SPA\n  // Attach to ssrContext head or\n  // apply new theme to document\n  public init (root: Vue, ssrContext?: any): void {\n    if (this.disabled) return\n\n    /* istanbul ignore else */\n    if ((root as any).$meta) {\n      this.initVueMeta(root)\n    } else if (ssrContext) {\n      this.initSSR(ssrContext)\n    }\n\n    this.initTheme()\n  }\n\n  // Allows for you to set target theme\n  public setTheme (theme: 'light' | 'dark', value: object) {\n    this.themes[theme] = Object.assign(this.themes[theme], value)\n    this.applyTheme()\n  }\n\n  // Reset theme defaults\n  public resetThemes () {\n    this.themes.light = Object.assign({}, this.defaults.light)\n    this.themes.dark = Object.assign({}, this.defaults.dark)\n    this.applyTheme()\n  }\n\n  // Check for existence of style element\n  private checkOrCreateStyleElement (): boolean {\n    this.styleEl = document.getElementById('vuetify-theme-stylesheet') as HTMLStyleElement\n\n    /* istanbul ignore next */\n    if (this.styleEl) return true\n\n    this.genStyleElement() // If doesn't have it, create it\n\n    return Boolean(this.styleEl)\n  }\n\n  private fillVariant (\n    theme: Partial<VuetifyThemeVariant> = {},\n    dark: boolean\n  ): VuetifyThemeVariant {\n    const defaultTheme = this.themes[dark ? 'dark' : 'light']\n\n    return Object.assign({},\n      defaultTheme,\n      theme\n    )\n  }\n\n  // Generate the style element\n  // if applicable\n  private genStyleElement (): void {\n    /* istanbul ignore if */\n    if (typeof document === 'undefined') return\n\n    /* istanbul ignore next */\n    const options = this.options || {}\n\n    this.styleEl = document.createElement('style')\n    this.styleEl.type = 'text/css'\n    this.styleEl.id = 'vuetify-theme-stylesheet'\n\n    if (options.cspNonce) {\n      this.styleEl.setAttribute('nonce', options.cspNonce)\n    }\n\n    document.head.appendChild(this.styleEl)\n  }\n\n  private initVueMeta (root: any) {\n    this.vueMeta = root.$meta()\n    if (this.isVueMeta23) {\n      // vue-meta needs to apply after mounted()\n      root.$nextTick(() => {\n        this.applyVueMeta23()\n      })\n      return\n    }\n\n    const metaKeyName = typeof this.vueMeta.getOptions === 'function' ? this.vueMeta.getOptions().keyName : 'metaInfo'\n    const metaInfo = root.$options[metaKeyName] || {}\n\n    root.$options[metaKeyName] = () => {\n      metaInfo.style = metaInfo.style || []\n\n      const vuetifyStylesheet = metaInfo.style.find((s: any) => s.id === 'vuetify-theme-stylesheet')\n\n      if (!vuetifyStylesheet) {\n        metaInfo.style.push({\n          cssText: this.generatedStyles,\n          type: 'text/css',\n          id: 'vuetify-theme-stylesheet',\n          nonce: (this.options || {}).cspNonce,\n        })\n      } else {\n        vuetifyStylesheet.cssText = this.generatedStyles\n      }\n\n      return metaInfo\n    }\n  }\n\n  private applyVueMeta23 () {\n    const { set } = this.vueMeta.addApp('vuetify')\n\n    set({\n      style: [{\n        cssText: this.generatedStyles,\n        type: 'text/css',\n        id: 'vuetify-theme-stylesheet',\n        nonce: (this.options || {}).cspNonce,\n      }],\n    })\n  }\n\n  private initSSR (ssrContext?: any) {\n    const options = this.options || {}\n    // SSR\n    const nonce = options.cspNonce ? ` nonce=\"${options.cspNonce}\"` : ''\n    ssrContext.head = ssrContext.head || ''\n    ssrContext.head += `<style type=\"text/css\" id=\"vuetify-theme-stylesheet\"${nonce}>${this.generatedStyles}</style>`\n  }\n\n  private initTheme () {\n    // Only watch for reactivity on client side\n    if (typeof document === 'undefined') return\n\n    // If we get here somehow, ensure\n    // existing instance is removed\n    if (this.vueInstance) this.vueInstance.$destroy()\n\n    // Use Vue instance to track reactivity\n    // TODO: Update to use RFC if merged\n    // https://github.com/vuejs/rfcs/blob/advanced-reactivity-api/active-rfcs/0000-advanced-reactivity-api.md\n    this.vueInstance = new Vue({\n      data: { themes: this.themes },\n\n      watch: {\n        themes: {\n          immediate: true,\n          deep: true,\n          handler: () => this.applyTheme(),\n        },\n      },\n    })\n  }\n\n  get currentTheme () {\n    const target = this.dark ? 'dark' : 'light'\n\n    return this.themes[target]\n  }\n\n  get generatedStyles (): string {\n    const theme = this.parsedTheme\n    /* istanbul ignore next */\n    const options = this.options || {}\n    let css\n\n    if (options.themeCache != null) {\n      css = options.themeCache.get(theme)\n      /* istanbul ignore if */\n      if (css != null) return css\n    }\n\n    css = ThemeUtils.genStyles(theme, options.customProperties)\n\n    if (options.minifyTheme != null) {\n      css = options.minifyTheme(css)\n    }\n\n    if (options.themeCache != null) {\n      options.themeCache.set(theme, css)\n    }\n\n    return css\n  }\n\n  get parsedTheme (): VuetifyParsedTheme {\n    /* istanbul ignore next */\n    const theme = this.currentTheme || {}\n    return ThemeUtils.parse(theme)\n  }\n\n  // Is using v2.3 of vue-meta\n  // https://github.com/nuxt/vue-meta/releases/tag/v2.3.0\n  private get isVueMeta23 (): boolean {\n    return typeof this.vueMeta.addApp === 'function'\n  }\n}\n"],"sourceRoot":""}]}